name: Release

on:
  push:
    tags:
      - '*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Version
        id: get_tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Docker Build
        working-directory: ./docker
        run: |
          echo "Build Version: ${{ steps.get_tag.outputs.tag }}"
          docker compose build --build-arg BUILD_VERSION=${{ steps.get_tag.outputs.tag }}
      - name: Docker Push
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin ${{secrets.DOCKER_REPOSITORY}}
          docker push chaldea/rhoaias-server
          docker push chaldea/rhoaias-client
          docker push chaldea/rhoaias-ingress
          docker tag chaldea/rhoaias-server chaldea/rhoaias-server:${{ steps.get_tag.outputs.tag }}
          docker tag chaldea/rhoaias-client chaldea/rhoaias-client:${{ steps.get_tag.outputs.tag }}
          docker tag chaldea/rhoaias-ingress chaldea/rhoaias-ingress:${{ steps.get_tag.outputs.tag }}
          docker push chaldea/rhoaias-server:${{ steps.get_tag.outputs.tag }}
          docker push chaldea/rhoaias-client:${{ steps.get_tag.outputs.tag }}
          docker push chaldea/rhoaias-ingress:${{ steps.get_tag.outputs.tag }}
  binary:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            artifact_name: RhoAiasClient
            asset_name: rhoaias-client-linux-x64
          - os: ubuntu-latest
            rid: linux-arm64
            artifact_name: RhoAiasClient
            asset_name: rhoaias-client-linux-arm64
          - os: windows-latest
            rid: win-x64
            artifact_name: RhoAiasClient.exe
            asset_name: rhoaias-client-win-x64.exe
          - os: windows-latest
            rid: win-arm64
            artifact_name: RhoAiasClient.exe
            asset_name: rhoaias-client-win-arm64.exe
    name: Build On ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Build Tools
        if: ${{ matrix.rid == 'linux-arm64' }}
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
      - name: Get Version
        id: get_tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Dotnet Publish
        run: |
          dotnet publish src/Chaldea.Fate.RhoAias.Client/Chaldea.Fate.RhoAias.Client.csproj -o dist -r ${{ matrix.rid }} -p:PublishAot=true -p:AssemblyVersion=${{ steps.get_tag.outputs.tag }} -p:Version=${{ steps.get_tag.outputs.tag }}
      - name: Upload Binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_TOKEN }}
          file: dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
